[{"path":"https://slds-lmu.github.io/lecture_service/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lukas Burk. Author, maintainer.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burk L (2025). lese: SLDS Lecture Service Companion. R package version 0.3.0, https://slds-lmu.github.io/lecture_service/.","code":"@Manual{,   title = {lese: SLDS Lecture Service Companion},   author = {Lukas Burk},   year = {2025},   note = {R package version 0.3.0},   url = {https://slds-lmu.github.io/lecture_service/}, }"},{"path":"https://slds-lmu.github.io/lecture_service/index.html","id":"slds-lecture-service","dir":"","previous_headings":"","what":"SLDS Lecture Service Companion","title":"SLDS Lecture Service Companion","text":"Overview project two goals: Provide common assets needed lectures, , keep sync. Check slides lecture repositories (compile, PDFs date?). (also happens R package lese can install many convenience functions) 1), required files live ./service/ correct folder structure one can simply copy files directory “top” existing lecture, e.g.: wrapped script service/scripts/update-service.sh, also synced lecture’s top-level ./scripts/ folder. Afterwards, git status can used check changes.","code":"rsync -r lecture_service/service/ lecture_i2ml/"},{"path":"https://slds-lmu.github.io/lecture_service/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"SLDS Lecture Service Companion","text":"assumed directory structure lecture repositories cloned (downloaded) looks like : can either manually git clone lecture repos use make clone Note text file include_lectures used globally keep track relevant lecture repos, intend work lecture_advml set contain lecture_advml subsequent make commands functions limited scope lecture. default contains lectures currently hosted slds-lmu/. Refer Teaching DevOps Wiki central documentation hub.","code":"lecture_service ├── lecture_advml ├── lecture_i2ml ├── lecture_sl ├── [...] ├── Makefile ├── R ├── scripts ├── service └── [...]"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Check latexmk logs for common errors — check_log","title":"Check latexmk logs for common errors — check_log","text":"Uses regular expressions search log files common errors:","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check latexmk logs for common errors — check_log","text":"","code":"check_log(slide_file, before = 0, after = 1)"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check latexmk logs for common errors — check_log","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). , [integer(1)] Number log lines display line found via regex. Defaults 0 lines , 1 line .","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check latexmk logs for common errors — check_log","text":"character vector one element per match, individual lines separated \\\\n within element. errors detected, empty character(0) returned.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check latexmk logs for common errors — check_log","text":"\"^! Undefined control sequence\": Typo, missing package preamble (including latex-math), command defined. \"found\": Implying missing figure included file, maybe due misspecified filename via Overleafs autocompletion (slides/<topic>/figure/ path instead figure/) file committed git. \"^! Missing \\$ inserted\": Missing \\\\$ delimiter math \"! LaTeX Error:\": generic error","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check latexmk logs for common errors — check_log","text":"","code":"if (FALSE) { # \\dontrun{ # Example where compilation failed due to simple typo / syntax error: check_log(\"slides-gp-basic-3\") # \"976: ! Undefined control sequence.\\n976: l.9 \\newcommandiscrete\\n\" } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_many.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile and compare many slides — check_slides_many","title":"Compile and compare many slides — check_slides_many","text":"Wrapper check_slides_single().","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_many.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile and compare many slides — check_slides_many","text":"","code":"check_slides_many(   lectures_tbl = collect_lectures(),   pre_clean = FALSE,   compare_slides = FALSE,   create_comparison_pdf = FALSE,   parallel = TRUE,   thresh_psnr = 40,   dpi_check = 50,   dpi_out = 100,   pixel_tol = 20,   overwrite = FALSE )"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_many.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile and compare many slides — check_slides_many","text":"lectures_tbl Must contain tex column. Defaults collect_lectures(). pre_clean [FALSE]: Passed compile_slide(). compare_slides [FALSE] TRUE, run compare_slide() slide iff compile check passed. create_comparison_pdf, thresh_psnr, dpi_check, dpi_out, pixel_tol, overwrite Passed compare_slide(). parallel [TRUE] Whether parallelize. Uses future.apply::future_lapply future::plan(\"multisession\").","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_many.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile and compare many slides — check_slides_many","text":"Invisibly: expanded lectures_tbl check results Also saves output slide_check_cache.rds.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile and compare a slide chunk — check_slides_single","title":"Compile and compare a slide chunk — check_slides_single","text":"Use check_slides_many() check many slides.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile and compare a slide chunk — check_slides_single","text":"","code":"check_slides_single(   slide_file,   pre_clean = FALSE,   compare_slides = FALSE,   create_comparison_pdf = FALSE,   thresh_psnr = 40,   dpi_check = 50,   dpi_out = 100,   pixel_tol = 20,   overwrite = FALSE )"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile and compare a slide chunk — check_slides_single","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). pre_clean [FALSE]: Passed compile_slide(). compare_slides [FALSE] TRUE, run compare_slide() slide iff compile check passed. create_comparison_pdf, thresh_psnr, dpi_check, dpi_out, pixel_tol, overwrite Passed compare_slide().","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile and compare a slide chunk — check_slides_single","text":"data.frame columns tex: slide_file argument. compile_check: logical indicating whether compile_slide() passed compare_check: logical indicating whether compare_slide() passed ( NA compare_slides = FALSE compile_slide() pass) compare_check_note: Note compare_slide() indicating number nature differences. compare_check_raw: verbose form compare_check_note. compile_note: compilation errors, error messages compile_slide() included (see also check_log()).","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_slides_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile and compare a slide chunk — check_slides_single","text":"","code":"if (FALSE) { # \\dontrun{ check_slides_single(slide_file = \"slides-basics-whatisml\", pre_clean = TRUE, compare_slides = TRUE) } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_system_tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple check for availability of system tools — check_system_tool","title":"Simple check for availability of system tools — check_system_tool","text":"Can used verify tool (e.g. convert) $PATH findable within R. Sometimes tool $PATH regular shell sessions within R.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_system_tool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple check for availability of system tools — check_system_tool","text":"","code":"check_system_tool(x, strictness = c(\"warning\", \"error\", \"none\"))"},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_system_tool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple check for availability of system tools — check_system_tool","text":"x Name binary, e.g. convert ImageMagick brew Homebrew macOS. strictness [\"warning\"] Wether emit warning, \"error\", nothing (\"none\") tool found.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_system_tool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple check for availability of system tools — check_system_tool","text":"TRUE tool find, FALSE otherwise, error strict tool found.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/check_system_tool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple check for availability of system tools — check_system_tool","text":"","code":"check_system_tool(\"diff-pdf\", strictness = \"none\") #> [1] FALSE"},{"path":"https://slds-lmu.github.io/lecture_service/reference/clean_slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean output for a single .tex file — clean_slide","title":"Clean output for a single .tex file — clean_slide","text":"Uses latexmk -C <slide_file>","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/clean_slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean output for a single .tex file — clean_slide","text":"","code":"clean_slide(slide_file, verbose = FALSE)"},{"path":"https://slds-lmu.github.io/lecture_service/reference/clean_slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean output for a single .tex file — clean_slide","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). verbose [TRUE]: Print additional output console.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/clean_slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean output for a single .tex file — clean_slide","text":"Invisibly: list entries passed: TRUE indicates successful compilation, FALSE failure. log: Absolute path log file case non-zero exit status.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/clean_slide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean output for a single .tex file — clean_slide","text":"","code":"if (FALSE) { # \\dontrun{ # Create the PDF compile_slide(\"slides-cart-computationalaspects.tex\")  # Remove the PDF and other output clean_slide(\"slides-cart-computationalaspects.tex\") } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/collect_lectures.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble table of lecture slides — collect_lectures","title":"Assemble table of lecture slides — collect_lectures","text":"Assemble table lecture slides","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/collect_lectures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble table of lecture slides — collect_lectures","text":"","code":"collect_lectures(   lectures_path = here::here(),   filter_lectures = lectures(),   exclude_slide_subdirs = c(\"attic\", \"rsrc\", \"all\", \"figure_man\", \"figures_tikz\",     \"figure\", \"tex\", \"backup\"),   exclude_slide_names = c(\"chapter-order\", \"chapter-order-slides-all\",     \"chapter-order-nutshell\", \"nospeakermargin\") )"},{"path":"https://slds-lmu.github.io/lecture_service/reference/collect_lectures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble table of lecture slides — collect_lectures","text":"lectures_path Path containing lecture_* directories. Defaulting ::(). filter_lectures character(): Vector lecture repo names filter table , e.g. \"lecture_i2ml\". Defaults lectures() respect include_lectures. exclude_slide_subdirs Exclude slides/ subfolders, e.g. c(\"attic\", \"rsrc\", \"\"). exclude_slide_names Exclude slides matching names exactly, e.g. \"chapter-order\" (default).","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/collect_lectures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble table of lecture slides — collect_lectures","text":"data.frame`` one row per slide .tex` file.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/collect_lectures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble table of lecture slides — collect_lectures","text":"","code":"if (FALSE) { # \\dontrun{ collect_lectures() } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare slide PDF against reference PDF — compare_slide","title":"Compare slide PDF against reference PDF — compare_slide","text":"compiled .tex file slides/gaussian-processes/slides-gp-bayes-lm.pdf compared assumed accepted / known good version slides-pdf/slides-gp-bayes-lm.pdf exists.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare slide PDF against reference PDF — compare_slide","text":"","code":"compare_slide(   slide_file,   verbose = TRUE,   create_comparison_pdf = FALSE,   thresh_psnr = 40,   dpi_check = 50,   dpi_out = 100,   pixel_tol = 20,   view = FALSE,   overwrite = FALSE )"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare slide PDF against reference PDF — compare_slide","text":"slide_file character(1): single slide .tex file (see examples). verbose [TRUE]: Print additional output console. create_comparison_pdf [FALSE]: Use diff-pdf create comparison PDF ./comparison/<slide-name>.pdf. PDF contains slide pages detected differences, highlighted red/blue. thresh_psnr [40]: PSNR threshold difference detection diff-pdf-visually. Higher sensitive. dpi_check [50] Resolution rasterised files used diff-pdf-visually. Lower coarse. dpi_out [100] Resolution output PDF produced diff-pdf. Lower values lead pixelated diff PDFs. pixel_tol [20] Per-page pixel tolerance comparison used diff-pdf. view [FALSE] interactive use: Opens window showing comparison diff. overwrite [FALSE] Re-creates output diff PDF even already exists appears date.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare slide PDF against reference PDF — compare_slide","text":"Invisibly: list results: passed: TRUE indicates successful comparison, FALSE failure. reason: Shorthand reason failing comparison. pages: Vector pages differences. output: Full output produced diff-pdf-visually. Also prints summary, e.g.: \"! slides-cart-computationalaspects: Changes detected pages: 11 12 (signif.: 0 0)\"","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare slide PDF against reference PDF — compare_slide","text":"First uses diff-pdf-visually check slides differences based PSNR rasterised versions slides (adjustable thresh_psnr), uses diff-pdf create PDF highlighting differences create_comparison_pdf TRUE. re-runs diff-pdf create comparison PDF file output file ./comparison/<slide-name>.pdf recent input PDF files. way can safely re-run function repeatedly without worrying computational overhead.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compare slide PDF against reference PDF — compare_slide","text":"Uses diff-pdf-visually diff-pdf hood, may need adjust $PATH.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compare_slide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare slide PDF against reference PDF — compare_slide","text":"","code":"if (FALSE) { # \\dontrun{ # The \"normal\" way: A .tex file name compare_slide(\"slides-cart-computationalaspects.tex\")  # Also acceptable: A full path (absolute or relative), convenient for scripts compare_slide(\"lecture_advml/slides/gaussian-processes/slides-gp-bayes-lm.tex\")  # Lazy way: No extension, just a name compare_slide(\"slides-cart-predictions\")  # Whoopsie supplied name of PDF instead no biggie I got u compare_slide(\"slides-forests-proximities.pdf\")  compare_slide(\"slides-boosting-cwb-basics\") } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a single .tex file — compile_slide","title":"Compile a single .tex file — compile_slide","text":"Compile single .tex file","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a single .tex file — compile_slide","text":"","code":"compile_slide(   slide_file,   pre_clean = TRUE,   margin = TRUE,   check_status = TRUE,   verbose = TRUE,   log = FALSE )"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a single .tex file — compile_slide","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). pre_clean [TRUE]: Run clean_slide() beforehand, ensuring clean slate. margin [TRUE] default renders slides margin. Otherwise 4:3 slide rendered. check_status [TRUE]: Wait latexmk finish return exit status. verbose [TRUE]: Print additional output console. log [FALSE]: Write stdout stderr logs ./logs/.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a single .tex file — compile_slide","text":"Invisibly: list entries passed: TRUE indicates successful compilation, FALSE failure. log: Absolute path log file case non-zero exit status.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a single .tex file — compile_slide","text":"","code":"if (FALSE) { # \\dontrun{ # The \"normal\" way: A .tex file name compile_slide(\"slides-cart-computationalaspects.tex\")  # Also acceptable: A full path (absolute or relative), convenient for scripts compile_slide(\"lecture_advml/slides/gaussian-processes/slides-gp-bayes-lm.tex\")  # Lazy way: No extension, just a name compile_slide(\"slides-cart-predictions\") } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide_tinytex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","title":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","text":"TinyTex's tinytex::latexmk() automatically installs missing LaTeX packages, making useful. just thin wrapper run command changed working directory, relative paths used preamble.tex etc. require.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide_tinytex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","text":"","code":"compile_slide_tinytex(slide_file, margin, ...)"},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide_tinytex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). margin [TRUE] default renders slides margin. Otherwise 4:3 slide rendered. ... Arguments passed tinytex::latexmk().","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide_tinytex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","text":"TRUE output PDF file exists, FALSE otherwise.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/compile_slide_tinytex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a .tex file using TinyTex's latexmk emulation — compile_slide_tinytex","text":"","code":"if (FALSE) { # \\dontrun{ compile_slide_tinytex(\"lecture_advml/slides/gaussian-processes/slides-gp-basic-3.tex\") } # }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/find_slide_tex.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a slide set across all lectures — find_slide_tex","title":"Find a slide set across all lectures — find_slide_tex","text":"Lectures need stored locally current directory regular names like  lecture_i2ml. strongly assumed slide names slides-cart-predictions.tex unique across lectures.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/find_slide_tex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a slide set across all lectures — find_slide_tex","text":"","code":"find_slide_tex(slide_file, lectures_tbl = collect_lectures())"},{"path":"https://slds-lmu.github.io/lecture_service/reference/find_slide_tex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a slide set across all lectures — find_slide_tex","text":"slide_file [character(1)] Name (single) slide, without .tex extension. See examples find_slide_tex(). lectures_tbl Must contain tex column. Defaults collect_lectures().","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/find_slide_tex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a slide set across all lectures — find_slide_tex","text":"","code":"if (FALSE) { # fs::dir_exists(here::here(\"lecture_i2ml\")) # The \"normal\" way: A .tex file name str(find_slide_tex(slide_file = \"slides-cart-computationalaspects.tex\"))  # Also acceptable: A full path (absolute or relative), convenient for scripts str(find_slide_tex(slide_file = \"lecture_i2ml/slides/cart/slides-cart-predictions.tex\"))  # Lazy way: No extension, just a name str(find_slide_tex(slide_file = \"slides-cart-predictions\"))  # Can also ge tthe .tex file for a .pdf str(find_slide_tex(slide_file = \"slides-cart-predictions.pdf\")) }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/install_lecheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Install the lecheck cli tool — install_lecheck","title":"Install the lecheck cli tool — install_lecheck","text":"path $PATH make tool usable shell sessions.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/install_lecheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install the lecheck cli tool — install_lecheck","text":"","code":"install_lecheck(path = \"~/.local/bin\", overwrite = TRUE)"},{"path":"https://slds-lmu.github.io/lecture_service/reference/install_lecheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install the lecheck cli tool — install_lecheck","text":"path [\"~/.local/bin\"] Path symlink tool . Must exist writable. overwrite [TRUE] Overwrite existing symlink.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/install_lecheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install the lecheck cli tool — install_lecheck","text":"FALSE symlink already exists overwritten. Otherwise: path symlink returned.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/install_lecheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install the lecheck cli tool — install_lecheck","text":"","code":"if (FALSE) { install_lecheck()  # Would only work if the R session is started under a user that can write to /usr/local/bin install_lecheck(\"/usr/local/bin\") }"},{"path":"https://slds-lmu.github.io/lecture_service/reference/lectures.html","id":null,"dir":"Reference","previous_headings":"","what":"Get included lectures — lectures","title":"Get included lectures — lectures","text":"Uses central file ./include_lectures, ignoring commented lines. Can overridden environment variable $include_lectures. neither environment variable file exists, defaults listing lectures.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/lectures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get included lectures — lectures","text":"","code":"lectures()"},{"path":"https://slds-lmu.github.io/lecture_service/reference/lectures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get included lectures — lectures","text":"character vector, e.g. c(\"lecture_i2ml\", \"lecture_advml\"), depending ./include_lectures","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/lectures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get included lectures — lectures","text":"","code":"lectures() #> [1] \"lecture_i2ml\"         \"lecture_advml\"        \"lecture_sl\"           #> [4] \"lecture_algods\"       \"lecture_optimization\" \"lecture_iml\"          #> [7] \"lecture_debug\""},{"path":"https://slds-lmu.github.io/lecture_service/reference/lese-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lese: SLDS Lecture Service Companion — lese-package","title":"lese: SLDS Lecture Service Companion — lese-package","text":"Provides infrastructure around SLDS lectures maintenance development.","code":""},{"path":[]},{"path":"https://slds-lmu.github.io/lecture_service/reference/lese-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lese: SLDS Lecture Service Companion — lese-package","text":"Maintainer: Lukas Burk github@quantenbrot.de (ORCID)","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL — op-null-default","title":"Default value for NULL — op-null-default","text":"infix function makes easy replace NULLs default value. inspired way Ruby's operation (||) works.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/op-null-default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NULL — op-null-default","text":"","code":"x %||% y  x %|0|% y"},{"path":"https://slds-lmu.github.io/lecture_service/reference/op-null-default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NULL — op-null-default","text":"x, y x NULL length 0, return y; otherwise returns x.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/op-null-default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default value for NULL — op-null-default","text":"","code":"1 %||% 2 #> [1] 1 NULL %||% 2 #> [1] 2 character(0) %|0|% \"\" #> [1] \"\" list() %|0|% \"\" #> [1] \"\""},{"path":"https://slds-lmu.github.io/lecture_service/reference/set_margin_token_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage the with/without margin dummy file — set_margin_token_file","title":"Manage the with/without margin dummy file — set_margin_token_file","text":"See style/lmu-lecture.sty depending presence empty .tex file specific name certain layout options set compile slides either 16:9 margins 4:3 without margin speaker.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/set_margin_token_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage the with/without margin dummy file — set_margin_token_file","text":"","code":"set_margin_token_file(wd, margin = TRUE, token_name = \"nospeakermargin.tex\")"},{"path":"https://slds-lmu.github.io/lecture_service/reference/set_margin_token_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage the with/without margin dummy file — set_margin_token_file","text":"wd Working directory (relative absolute) file needs created. directory .tex file compiled located. margin [TRUE] Whether enable disable margin. token_name \"nospeakermargin.tex\" name changes needs flexible testing can adjusted, typically name set stone via lmu-lecture.sty.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/set_margin_token_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage the with/without margin dummy file — set_margin_token_file","text":"Nothing","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/set_margin_token_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage the with/without margin dummy file — set_margin_token_file","text":"","code":"wd <- tempdir()  set_margin_token_file(wd = wd, margin = FALSE) stopifnot(\"file exists when no margin set\" = file.exists(file.path(wd, \"nospeakermargin.tex\")))  set_margin_token_file(wd = wd, margin = TRUE) stopifnot(\"file is removed when margin set\" = !file.exists(file.path(wd, \"nospeakermargin.tex\")))"},{"path":"https://slds-lmu.github.io/lecture_service/reference/this_repo_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Status of the service repo checkout Same as lecture_status_local() but for this service repo — this_repo_status","title":"Status of the service repo checkout Same as lecture_status_local() but for this service repo — this_repo_status","text":"Status service repo checkout lecture_status_local() service repo","code":""},{"path":"https://slds-lmu.github.io/lecture_service/reference/this_repo_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status of the service repo checkout Same as lecture_status_local() but for this service repo — this_repo_status","text":"","code":"this_repo_status()"},{"path":"https://slds-lmu.github.io/lecture_service/reference/this_repo_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status of the service repo checkout Same as lecture_status_local() but for this service repo — this_repo_status","text":"data.frame similar lecture_status_local().","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-030","dir":"Changelog","previous_headings":"","what":"lese 0.3.0","title":"lese 0.3.0","text":"Rename check_all_slides check_slides_many(), turn wrapper around check_slides_single() Make documentation consistent, e.g. inheriting slide_file parameter doc find_slide_tex(). slide_status_pr.Rmd slide_status.Rmd: show slide comparison column output comparison conducted (longer case default) Running compile_slide() file itnerest directly, Using lecheck cli control better error messages, Running make selected topic directories shell needed","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-022","dir":"Changelog","previous_headings":"","what":"lese 0.2.2","title":"lese 0.2.2","text":"Ignore chapter-order-slides-.tex slide name collect_lectures()","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-021","dir":"Changelog","previous_headings":"","what":"lese 0.2.1","title":"lese 0.2.1","text":"Added check_slides() argument compare_slides defaulting FALSE, making longer pressingly needed slide comparisons slides-pdf reference slides optional step rather default behavior.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-020","dir":"Changelog","previous_headings":"","what":"lese 0.2.0","title":"lese 0.2.0","text":"Add new layout helpers \\splitV, \\twobytwo others, see https://github.com/slds-lmu/teaching_devops_issues/issues/18","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-011","dir":"Changelog","previous_headings":"","what":"lese 0.1.1","title":"lese 0.1.1","text":"topics move lectures, current heuristic prefers recently edited one. Example: slides-gp-bayes-lm.tex included lecture_sl lecture_advml, former recent. Extend LaTeX dependencies install via make install-tex based requirements exercises lecture_sl Explicitly document TeX Live 2024 assumed entire setup.","code":""},{"path":"https://slds-lmu.github.io/lecture_service/news/index.html","id":"lese-010","dir":"Changelog","previous_headings":"","what":"lese 0.1.0","title":"lese 0.1.0","text":"lecheck: Add clean subcommand run latexmk -C nothing else. lecheck: Add --pdf-copy flag copy compiled slides slides-pdf/<slide-name>.tex. lecheck: Add ---comparison-pdf flag avoid creating diff PDFs via compare_slides(). lecheck: Add ---margin flag compiles slides without speaker margin. Add margin flag compile_slides( compile_slides_tinytex( facilitate /without margin compilation Add lese::set_margin_token_file utility manage token file . Improve robustness lecture directory listing collect_lectures(). Add file_counts.qmd (still needs cleanup ideally subdirectory, paths…) Start taking versioning somewhat seriously.","code":""}]
