% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile-slides.R
\name{compile_slide}
\alias{compile_slide}
\title{Compile a single .tex file}
\usage{
compile_slide(
  slide_file,
  pre_clean = TRUE,
  post_clean = TRUE,
  margin = TRUE,
  check_status = TRUE,
  verbose = TRUE,
  log = FALSE,
  method = c("system", "docker"),
  ...
)
}
\arguments{
\item{slide_file}{\verb{[character(1)]} Name of a (single) slide, with or without \code{.tex} extension. See examples of \code{\link[=find_slide_tex]{find_slide_tex()}}.}

\item{pre_clean, post_clean}{\verb{[TRUE]}: Run \code{clean_slide()} before / after compilation, ensuring a clean slate.}

\item{margin}{\verb{[TRUE]} By default renders slides with margin. Otherwise a 4:3 slide is
rendered.}

\item{check_status}{\verb{[TRUE]}: Wait for \code{latexmk} to finish and return the exit status.}

\item{verbose}{\verb{[TRUE]}: Print additional output to the console.}

\item{log}{\verb{[FALSE]}: Write stdout and stderr logs to \verb{./logs/}.}

\item{method}{\verb{["system"]}: Either "system" or "docker". Of the latter, uses \code{\link[=latexmk_docker]{latexmk_docker()}} for rendering.}

\item{...}{For future extension. CUrrently passed to \code{\link[=latexmk_docker]{latexmk_docker()}} or \code{\link[=latexmk_system]{latexmk_system()}}.}
}
\value{
Invisibly: A list with entries
\itemize{
\item passed: TRUE indicates a successful compilation, FALSE a failure.
\item log: Absolute path to the log file in case of a non-zero exit status.
}
}
\description{
Compile a single .tex file
}
\examples{
\dontrun{
# The "normal" way: A .tex file name
compile_slide("slides-cart-computationalaspects.tex")

# Also acceptable: A full path (absolute or relative), convenient for scripts
compile_slide("lecture_advml/slides/gaussian-processes/slides-gp-bayes-lm.tex")

# Lazy way: No extension, just a name
compile_slide("slides-cart-predictions")
}
}
\seealso{
\code{\link[=latemk_docker]{latemk_docker()}} \code{\link[=latexmk_system]{latexmk_system()}}
}
