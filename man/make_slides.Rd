% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile-slides.R
\name{make_slides}
\alias{make_slides}
\title{Run \code{make} in a slide directory}
\usage{
make_slides(
  topic,
  lectures_tbl = collect_lectures(),
  make_arg = "most",
  pre_clean = TRUE,
  check_status = TRUE,
  verbose = TRUE,
  log = FALSE
)
}
\arguments{
\item{topic}{\code{character(1)}> Topic sub-directory to run \code{make} in, e.g. \code{slides-cart-predictions}}

\item{lectures_tbl}{Must contain \code{tex} column. Defaults to \code{collect_lectures()}.}

\item{make_arg}{\verb{["most"]}: Likely not wise to change.
\verb{make all} also copies slides to \code{slides-pdf}, which may not be intended.}

\item{pre_clean}{\verb{[TRUE]}: Run \verb{make clean} beforehand, ensuring a clean slate.}

\item{check_status}{\verb{[TRUE]}: Wait for \code{make} to finish and return the exit status.}

\item{verbose}{\verb{[TRUE]}: Print additional output to the console.}

\item{log}{\verb{[FALSE]}: Write stdout and stderr logs to \verb{./logs/}.}
}
\value{
Invisibly: A list with entries
\itemize{
\item passed: TRUE indicates a successful comparison, FALSE a failure.
\item log: Absolute path to the log file in case of a non-zero exit status.
}
}
\description{
Run \code{make} in a slide directory
}
\examples{
# Default: Run make and output status
make_slides("cart")
make_slides("regularization", check_status = TRUE)

# Runs in background, but doesn't capture exit code
make_slides("cart", check_status = FALSE)
}
